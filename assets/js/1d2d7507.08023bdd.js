"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[745],{6454:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>r,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var n=i(4848),o=i(8453);const a={},s="Home",l={id:"Tutorials/Home",title:"Home",description:"General overview",source:"@site/docs/Tutorials/Home.md",sourceDirName:"Tutorials",slug:"/Tutorials/Home",permalink:"/Tutorials/Home",draft:!1,unlisted:!1,editUrl:"https://github.com/project-SIMPLE/documentation/tree/main/docs/Tutorials/Home.md",tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"Tutorials",permalink:"/category/tutorials"},next:{title:"Tutorial \u2010 From GAMA model to Virtual Universe \u2010 case of a traffic model",permalink:"/Tutorials/Tutorial-\u2010-From-GAMA-model-to-Virtual-Universe-\u2010-case-of-a-traffic-model"}},r={},d=[{value:"General overview",id:"general-overview",level:2},{value:"Code Example models",id:"code-example-models",level:2},{value:"Demo models",id:"demo-models",level:2},{value:"Tutorial",id:"tutorial",level:2}];function c(e){const t={a:"a",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,o.RP)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"home",children:"Home"}),"\n",(0,n.jsx)(t.h2,{id:"general-overview",children:"General overview"}),"\n",(0,n.jsx)(t.p,{children:"In these pages we describe how to use the SIMPLE development environment to build a virtual universe and couple it to a GAMA model."}),"\n",(0,n.jsx)(t.p,{children:"The development environment is made up of two distinct parts designed to work together: a plugin for GAMA (Unity plugin) and a package for Unity."}),"\n",(0,n.jsx)(t.p,{children:"The GAMA plugin integrates new agent types and a new type of experimentation, making it easy to link with Unity. It also includes tools for automatically generating a VR version of an existing GAMA model."}),"\n",(0,n.jsx)(t.p,{children:"The Unity package includes a set of prefabs that make it easy to build a virtual environment and link it to GAMA. It also includes tools for automatically importing and exporting geometries from/to GAMA."}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["For the installation of the Unity plugin for GAMA, see ",(0,n.jsx)(t.a,{href:"https://github.com/project-SIMPLE/gaml.extension.unity?tab=readme-ov-file#installation",children:"here"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:["For the installation of the SIMPLE Unity template, see ",(0,n.jsx)(t.a,{href:"https://github.com/project-SIMPLE/simple.template.unity?tab=readme-ov-file#installation",children:"here"})]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"The GAMA plugin and Unity template include code examples to link GAMA and Unity, as well as 2 demos showing complete examples of virtual universes."}),"\n",(0,n.jsx)(t.h2,{id:"code-example-models",children:"Code Example models"}),"\n",(0,n.jsx)(t.p,{children:"4 code examples are provided to illustrate the use of different functions:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:'Send Receive Messages.gaml: shows how to send and receive a message from Unity. This model works with the "Assets/Scenes/Code Example/Send Receive Message" scene in the Unity template.'}),"\n",(0,n.jsx)(t.li,{children:'Send Static data.gaml: Shows how to send static geometries/agents to Unity, i.e. agents/geometries that are only sent on initialization and not updated afterwards. This model works with the "Assets/Scenes/Code Example/Receive Static Data" scene in the Unity model.'}),"\n",(0,n.jsx)(t.li,{children:'Send Dynamic data.gaml: Shows how to dynamically send geometries/agents to Unity, i.e. whose location/geometry is sent back to Unity at each time step. This model works with the "Assets/Scenes/Code Example/Receive Dynamic Data" scene in the Unity model.'}),"\n",(0,n.jsx)(t.li,{children:'User Interaction.gaml: Shows how to define user interactions in Unity and interact with the GAMA simulation. This model works with the "Assets/Scenes/Code Example/User Interactions" scene in the Unity model.'}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"demo-models",children:"Demo models"}),"\n",(0,n.jsx)(t.p,{children:"2 demos are provided to illustrate complete VR experiences."}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Demo/Single Player Game/DemoModelVR.gaml: demonstration of a single-player VR experience. In this demo, the player can see cars and motorcycles sent by GAMA. Clicking on a car or motorcycle removes it from the simulation. The player can also see blocks. If the player clicks on a block, it turns red and becomes a hotspot (vehicles will try to drive near this hotspot). Finally, the player can see a tree (static_agent) and move it (grab). The tree's position will be updated accordingly in the GAMA simulation. This demonstration works with the Unity Template's \"Assets/Scenes/Single Player Game/Main Scene\" (Scenes to use: Startup Menu, IP Menu, Single Player Game/Main Scene)."}),"\n",(0,n.jsx)(t.li,{children:'Demo/Multi Player Game/RaceVR.gaml: demonstration of a multiplayer VR experience. In this demo, players have to collect as many tokens as possible (treasure chest) in a maze. The player who collects the most tokens is the winner. All the players are playing in the same environment and they can see the other players. Interactions between players and the environment are managed by GAMA. This demonstration works with the "Assets/Scenes/Multi Player Game/Main Scene" of the Unity model (Scenes to use: Startup Menu, IP Menu, Multi Player Game/Main Scene, End of Game Menu).'}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"tutorial",children:"Tutorial"}),"\n",(0,n.jsx)(t.p,{children:"We offer a complete tutorial to illustrate how to build a complete virtual environment with interactions from an existing GAMA model. In this tutorial, we start with the traffic model included in the GAMA model library. In this model, vehicles (car) travel on a road network from building to building. The greater the number of vehicles on a road relative to its capacity, the slower the vehicles will move along the road. In addition, each vehicle emits pollutants into the air. The VR version we propose in this tutorial allows you to navigate with a manager's view of the world and to close/open roads."}),"\n",(0,n.jsxs)(t.p,{children:["The tutorial can be found ",(0,n.jsx)(t.a,{href:"https://github.com/project-SIMPLE/documentation/wiki/Tutorial-%E2%80%90-From-GAMA-model-to-Virtual-Universe-%E2%80%90-case-of-a-traffic-model",children:"here"})]})]})}function m(e={}){const{wrapper:t}={...(0,o.RP)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,i)=>{i.d(t,{RP:()=>a});var n=i(6540);const o=n.createContext({});function a(e){const t=n.useContext(o);return n.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}}}]);