"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[769],{640:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>h});var n=i(4848),o=i(8453);const a={},r="Step 1: Generation of the GAMA VR model",l={id:"Tutorials/Tutorial-\u2010-Step-1",title:"Step 1: Generation of the GAMA VR model",description:"Creation of the project",source:"@site/docs/Tutorials/Tutorial-\u2010-Step-1.md",sourceDirName:"Tutorials",slug:"/Tutorials/Tutorial-\u2010-Step-1",permalink:"/Tutorials/Tutorial-\u2010-Step-1",draft:!1,unlisted:!1,editUrl:"https://github.com/project-SIMPLE/documentation/tree/main/docs/Tutorials/Tutorial-\u2010-Step-1.md",tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"Tutorial \u2010 From GAMA model to Virtual Universe \u2010 case of a traffic model",permalink:"/Tutorials/Tutorial-\u2010-From-GAMA-model-to-Virtual-Universe-\u2010-case-of-a-traffic-model"},next:{title:"Step 2: Creation of the Unity basic game",permalink:"/Tutorials/Tutorial-\u2010-Step-2"}},s={},h=[{value:"Creation of the project",id:"creation-of-the-project",level:2},{value:"Generation of the VR model",id:"generation-of-the-vr-model",level:2},{value:"Page 1 - Define the general information to define the VR experiment",id:"page-1---define-the-general-information-to-define-the-vr-experiment",level:3},{value:"Minimum duration of a cycle (in s)",id:"minimum-duration-of-a-cycle-in-s",level:4},{value:"Main experiment",id:"main-experiment",level:4},{value:"Page 2 - Define the information about the display",id:"page-2---define-the-information-about-the-display",level:3},{value:"Main display",id:"main-display",level:4},{value:"Display to hide",id:"display-to-hide",level:4},{value:"Page 3 - Define the agents and Unity properties for the geometries to send",id:"page-3---define-the-agents-and-unity-properties-for-the-geometries-to-send",level:3},{value:"General information",id:"general-information",level:4},{value:"Definition of the building unity properties",id:"definition-of-the-building-unity-properties",level:4},{value:"Definition of the road unity properties",id:"definition-of-the-road-unity-properties",level:4},{value:"Definition of the people unity properties",id:"definition-of-the-people-unity-properties",level:4},{value:"Page 4 - Define the species of agents to send to unity",id:"page-4---define-the-species-of-agents-to-send-to-unity",level:3},{value:"Page 5 - Define the information about the player",id:"page-5---define-the-information-about-the-player",level:3},{value:"Minimum number of players",id:"minimum-number-of-players",level:4},{value:"Maximum number of players",id:"maximum-number-of-players",level:4},{value:"Maximum number of players",id:"maximum-number-of-players-1",level:4},{value:"Init location of the players",id:"init-location-of-the-players",level:4},{value:"Perception radius of player agent",id:"perception-radius-of-player-agent",level:4},{value:"Minimum distance between agents to be sent",id:"minimum-distance-between-agents-to-be-sent",level:4},{value:"Player Size",id:"player-size",level:4},{value:"Player color",id:"player-color",level:4},{value:"Finalizing",id:"finalizing",level:3}];function d(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.RP)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"step-1-generation-of-the-gama-vr-model",children:"Step 1: Generation of the GAMA VR model"}),"\n",(0,n.jsx)(t.h2,{id:"creation-of-the-project",children:"Creation of the project"}),"\n",(0,n.jsx)(t.p,{children:'Create a new GAMA project, then copy inside in this project the folders "models" and "includes" from "Toy Models/Traffic" of the model library. In the "model" folder, delete all the models except "Traffic and Pollution.gaml".'}),"\n",(0,n.jsx)(t.h2,{id:"generation-of-the-vr-model",children:"Generation of the VR model"}),"\n",(0,n.jsxs)(t.p,{children:['Open the "Traffic and Pollution.gaml" model in the editor, then, select in the "Unity VR" menu "Model to VR". A Wizard should open. ',"\u26a0\ufe0f",' The "Unity VR" menu only appears if you have the mouse cursor in the text editor of the model.']}),"\n",(0,n.jsx)("img",{src:"https://github.com/project-SIMPLE/gaml.extension.unity/blob/2024-06/images/MenuVR.png?raw=true",alt:"MenuVR",width:"800"}),"\n",(0,n.jsx)(t.h3,{id:"page-1---define-the-general-information-to-define-the-vr-experiment",children:"Page 1 - Define the general information to define the VR experiment"}),"\n",(0,n.jsx)(t.h4,{id:"minimum-duration-of-a-cycle-in-s",children:"Minimum duration of a cycle (in s)"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:"This represents the minimum time between two simulation steps. As GAMA will be sending information to Unity at each simulation step, setting a minimum value for this variable ensures that the Unity client doesn't receive too much information too quickly."})}),"\n",(0,n.jsxs)(t.p,{children:["In this tutorial, we will set the value to ",(0,n.jsx)(t.strong,{children:"0.1"}),"."]}),"\n",(0,n.jsx)(t.h4,{id:"main-experiment",children:"Main experiment"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:"Name of the experiment, which will be extended to include a VR version."})}),"\n",(0,n.jsxs)(t.p,{children:["In this tutorial, we will extend the only experiment defined: ",(0,n.jsx)(t.strong,{children:"traffic"}),"."]}),"\n",(0,n.jsx)("img",{src:"https://github.com/project-SIMPLE/gaml.extension.unity/blob/2024-06/images/WizardTutorialExperiment.png?raw=true",alt:"experiment",width:"800"}),"\n",(0,n.jsx)(t.h3,{id:"page-2---define-the-information-about-the-display",children:"Page 2 - Define the information about the display"}),"\n",(0,n.jsx)(t.h4,{id:"main-display",children:"Main display"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:"Name of the display, which will be extended to include a VR version."})}),"\n",(0,n.jsxs)(t.p,{children:["In this tutorial, only we will extend the only display defined: ",(0,n.jsx)(t.strong,{children:"carte"}),"."]}),"\n",(0,n.jsx)(t.h4,{id:"display-to-hide",children:"Display to hide"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:"Displays that will not be displayed in the experiment."})}),"\n",(0,n.jsxs)(t.p,{children:["In this tutorial, we don't want to have the ",(0,n.jsx)(t.code,{children:"carte"})," display, so it ",(0,n.jsx)(t.strong,{children:"must be checked"}),"."]}),"\n",(0,n.jsx)("img",{src:"https://github.com/project-SIMPLE/gaml.extension.unity/blob/2024-06/images/WizardTutorialDisplay.png?raw=true",alt:"display",width:"800"}),"\n",(0,n.jsx)(t.h3,{id:"page-3---define-the-agents-and-unity-properties-for-the-geometries-to-send",children:"Page 3 - Define the agents and Unity properties for the geometries to send"}),"\n",(0,n.jsx)(t.h4,{id:"general-information",children:"General information"}),"\n",(0,n.jsx)(t.p,{children:'An important step is to describe how the entities (agents, geometries) will be sent to Unity, in particular how they will be represented in Unity and how the player will be able to interact with them. In the same way as for "aspects" in GAMA, it will be possible to define sets of properties that can then be assigned to agent species: for each agent species, you will be able to choose a way of sending it to Unity.'}),"\n",(0,n.jsx)(t.p,{children:"Regarding the representation of entities, the tool allows them to be represented in 2 different ways: by their geometry (with optional 3D extrusion) and by a prefab already defined in Unity."}),"\n",(0,n.jsx)(t.p,{children:"For interactions, it is possible to define whether the entity will have a physical existence in the world (collider), whether the player will be able to interact with it and how he or she will be able to interact: interaction by ray or possibility of catching the entity. Finally, it is possible to define whether Unity will send GAMA information on the entity's location (for example, if the player moves it)."}),"\n",(0,n.jsx)(t.h4,{id:"definition-of-the-building-unity-properties",children:"Definition of the building unity properties"}),"\n",(0,n.jsxs)(t.p,{children:["In this tutorial, we want to send all building geometries to Unity without interaction. We therefore add a new property for this purpose.\nWe have for that to fill the part ",(0,n.jsx)(t.em,{children:"Defining a Unity property"}),": in the ",(0,n.jsx)(t.em,{children:"name"}),' field, write "building". As we don\'t want to interact with the buildings, leave all ',(0,n.jsx)(t.em,{children:"Interaction"})," checkbox unchecked. For ",(0,n.jsx)(t.em,{children:"Aspect"}),", as we want to represent building geometries and not use a prefab, leave ",(0,n.jsx)(t.em,{children:"has a prefab"})," unchecked. We want to give them a height of 10m and show them in black. So we need to fill the ",(0,n.jsx)(t.em,{children:"height"}),' field with "10.0" and the ',(0,n.jsx)(t.em,{children:"color"}),' field with "black". Click then on the button "Add/Update".']}),"\n",(0,n.jsx)("img",{src:"https://github.com/project-SIMPLE/gaml.extension.unity/blob/2024-06/images/WizardTutorialBuildingUP.png?raw=true",alt:"buildingUP",width:"800"}),"\n",(0,n.jsx)(t.h4,{id:"definition-of-the-road-unity-properties",children:"Definition of the road unity properties"}),"\n",(0,n.jsxs)(t.p,{children:["In this tutorial, we want to send all road geometries to Unity with the possibility to interact with them (to let the player close roads by selecting them through the ray interactor). We therefore add a new property for this purpose.\nSimilarly as for the building Unity properties, we have for that to fill the part ",(0,n.jsx)(t.em,{children:"Defining a Unity property"}),": in the ",(0,n.jsx)(t.em,{children:"name"}),' field, write "road". We add a tag as well to facilitate the identification of this type of entity in Unity. For that, in the ',(0,n.jsx)(t.em,{children:"tag"}),' field, write "road". As we want to interact with the roads using the ray interaction, in ',(0,n.jsx)(t.em,{children:"Interaction"})," check the box ",(0,n.jsx)(t.em,{children:"has a collider"})," and ",(0,n.jsx)(t.em,{children:"is interactable"}),". For ",(0,n.jsx)(t.em,{children:"Aspect"}),", as we want to represent road geometries and not use a prefab, leave ",(0,n.jsx)(t.em,{children:"has a prefab"})," unchecked. We want to give them a height of 1m and show them in gray. So we need to fill the ",(0,n.jsx)(t.em,{children:"height"}),' field with "1.0" and the ',(0,n.jsx)(t.em,{children:"color"}),' field with "gray". Click then on the button "Add/Update".']}),"\n",(0,n.jsx)("img",{src:"https://github.com/project-SIMPLE/gaml.extension.unity/blob/2024-06/images/WizardTutorialRoadUP.png?raw=true",alt:"roadUP",width:"800"}),"\n",(0,n.jsx)(t.h4,{id:"definition-of-the-people-unity-properties",children:"Definition of the people unity properties"}),"\n",(0,n.jsxs)(t.p,{children:["In this tutorial, we want to send to send the location of the people agents to Unity without any interaction with them. We therefore add a new property for this purpose.\nIn ",(0,n.jsx)(t.em,{children:"Defining a Unity property"}),', write "people" in the ',(0,n.jsx)(t.em,{children:"name"})," field. As we want no interaction with the people entities, leave all the check box in ",(0,n.jsx)(t.em,{children:"Interaction"})," unchecked. For ",(0,n.jsx)(t.em,{children:"Aspect"}),", we want to represent people agents using a specific prefab called ",(0,n.jsx)(t.em,{children:"Car"}),", we then have to check ",(0,n.jsx)(t.em,{children:"has a prefab"}),". In ",(0,n.jsx)(t.em,{children:"Path to the Prefab"}),", we have to specify the path to the Prefab. For reasons of Unity limitations, this prefab must absolutely be in the Resources directory of the Unity project. In this tutorial, we want to use the ",(0,n.jsx)(t.em,{children:"Car"}),' prefab located in folder "Assets/Resources/Prefabs/Visual Prefabs/City/Vehicles/", we then write in ',(0,n.jsx)(t.em,{children:"Path to the Prefab"}),' "Prefabs/Visual Prefabs/City/Vehicles/Car". We set the scale of the prefab to "30.0", the rotation coefficient to "-1.0", the rotation offset to "-90.0" and the offset along the Y-Axis to "1.1". Click then on the button "Add/Update".']}),"\n",(0,n.jsx)("img",{src:"https://github.com/project-SIMPLE/gaml.extension.unity/blob/2024-06/images/WizardTutorialPeopleUP.png?raw=true",alt:"peopleUP",width:"800"}),"\n",(0,n.jsx)(t.h3,{id:"page-4---define-the-species-of-agents-to-send-to-unity",children:"Page 4 - Define the species of agents to send to unity"}),"\n",(0,n.jsx)(t.p,{children:"This page lets you specify which agent species to send with which propriety. It also allows you to specify for each species whether agents will be sent only once at initialization (static) or at each time step under certain conditions."}),"\n",(0,n.jsx)(t.p,{children:"In the case of this tutorial, we want to send roads and buildings only at initiation, and people agents at each time step. We therefore need to check these 3 species."}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:'For buildings, we want to use the "building" property and check the "Static" checkbox.'}),"\n",(0,n.jsxs)(t.li,{children:['For roads, we want to use the "road" property, adding a 2m buffer around the roads to represent them as surfaces rather than lines. To do this, we need to fill the ',(0,n.jsx)(t.em,{children:"buffer"}),' field with "2.0". Finally, as with buildings, we only want to send these roads at initialization, so we need to check the "Static" checkbox.']}),"\n",(0,n.jsxs)(t.li,{children:['Finally, for people agents, we want to use the "people" properties. As we want to send them at every time step, we can leave the "Static" checkbox unchecked and leave the default value in the ',(0,n.jsx)(t.em,{children:"when"})," field (send agent list at every time step)."]}),"\n"]}),"\n",(0,n.jsx)("img",{src:"https://github.com/project-SIMPLE/gaml.extension.unity/blob/2024-06/images/WizardTutorialGeomToSend.png?raw=true",alt:"geometries",width:"800"}),"\n",(0,n.jsx)(t.h3,{id:"page-5---define-the-information-about-the-player",children:"Page 5 - Define the information about the player"}),"\n",(0,n.jsx)(t.h4,{id:"minimum-number-of-players",children:"Minimum number of players"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:"How many players are required to run the simulation."})}),"\n",(0,n.jsxs)(t.p,{children:["In this tutorial, we'll set this to ",(0,n.jsx)(t.strong,{children:"1"}),"."]}),"\n",(0,n.jsx)(t.h4,{id:"maximum-number-of-players",children:"Maximum number of players"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:"Does an unlimited number of players can connect to the game?"})}),"\n",(0,n.jsxs)(t.p,{children:["In this tutorial, we'll ",(0,n.jsx)(t.strong,{children:"check"})," this option."]}),"\n",(0,n.jsx)(t.h4,{id:"maximum-number-of-players-1",children:"Maximum number of players"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:"If the model/game has a maximum number of players, what is this maximum number (it must be greater than 0)."})}),"\n",(0,n.jsxs)(t.p,{children:["In this tutorial, we'll set it to ",(0,n.jsx)(t.strong,{children:"1"})," to limit the number of players to one."]}),"\n",(0,n.jsx)(t.h4,{id:"init-location-of-the-players",children:"Init location of the players"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:"Sets the initial location of the players."})}),"\n",(0,n.jsxs)(t.p,{children:["In this example, we'll set it to ",(0,n.jsx)(t.strong,{children:100}),"."]}),"\n",(0,n.jsx)(t.h4,{id:"perception-radius-of-player-agent",children:"Perception radius of player agent"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:"If this option is greater than 0.0, it filters the agents to be sent to Unity, sending only those agents that are at a distance less than or equal to the perception radius."})}),"\n",(0,n.jsxs)(t.p,{children:["In this tutorial, we'll leave the ",(0,n.jsx)(t.strong,{children:"default value (0.0)"})," as we don't wish to filter the agents sent to Unity."]}),"\n",(0,n.jsx)(t.h4,{id:"minimum-distance-between-agents-to-be-sent",children:"Minimum distance between agents to be sent"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:"If greater than 0.0, this option filters the agents to be sent to Unity, so as to send only those agents that are too close (distance greater than this minimum distance)."})}),"\n",(0,n.jsxs)(t.p,{children:["In this tutorial, we'll leave the ",(0,n.jsx)(t.strong,{children:"default value (0.0)"})," as we don't wish to filter the agents sent to Unity."]}),"\n",(0,n.jsx)(t.h4,{id:"player-size",children:"Player Size"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:"Player display size in GAMA."})}),"\n",(0,n.jsxs)(t.p,{children:["In this tutorial, we'll set it to ",(0,n.jsx)(t.strong,{children:"20.0"}),"."]}),"\n",(0,n.jsx)(t.h4,{id:"player-color",children:"Player color"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.em,{children:"Player display color in GAMA."})}),"\n",(0,n.jsxs)(t.p,{children:["In this tutorial, we'll set it to ",(0,n.jsx)(t.strong,{children:"#red"}),"."]}),"\n",(0,n.jsx)("img",{src:"https://github.com/project-SIMPLE/gaml.extension.unity/blob/2024-06/images/WizardTutorialPlayer.png?raw=true",alt:"player",width:"800"}),"\n",(0,n.jsx)(t.h3,{id:"finalizing",children:"Finalizing"}),"\n",(0,n.jsx)(t.p,{children:'You can then click on finish to generate a new file: "traffic_model_VR.gaml", which will be used to launch the VR version of the model (experiment vr_xp). If the experiment does not appear, simply close the file and reopen it for GAMA to validate the file.'}),"\n",(0,n.jsx)("img",{src:"https://github.com/project-SIMPLE/gaml.extension.unity/blob/2024-06/images/ModelCreated.png?raw=true",alt:"ModelCreated",width:"600"})]})}function c(e={}){const{wrapper:t}={...(0,o.RP)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{RP:()=>a});var n=i(6540);const o=n.createContext({});function a(e){const t=n.useContext(o);return n.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}}}]);